import numpy as np
import cv2
import pandas as pd
import glob

# === Camera calibration parameters ===
camera_matrix = np.array([
    [3.38821744e+03, 0.00000000e+00, 9.01478839e+02],
    [0.00000000e+00, 3.35612041e+03, 5.95209942e+02],
    [0.00000000e+00, 0.00000000e+00, 1.00000000e+00]
], dtype=np.float32)

dist_coeffs = np.array([
    1.37363472e+00, -6.84275187e+01, 1.46233947e-02, 6.68579741e-02, 1.36646007e+03
], dtype=np.float32)

# === Load 3D digitizer points with names ===
digitizer_file = "data/points/digitizer_subject1.txt"
digitizer_data = pd.read_csv(digitizer_file, sep=r"\s+", header=None, names=["Name", "X", "Y", "Z"])

# === Iterate over all 2D frame files ===
frame_files = sorted(glob.glob("data/points/subject1_frame_*.txt"))
results = []

for frame_file in frame_files:
    # Load 2D points (with names)
    frame_data = pd.read_csv(frame_file, sep=r"\s+", header=None, names=["Name", "x", "y"])
    
    # Merge only matching points between 2D and 3D
    merged = pd.merge(digitizer_data, frame_data, on="Name")
    if len(merged) < 4:
        print(f"Skipping {frame_file} (only {len(merged)} matching points)")
        continue

    # Build arrays for solvePnP
    object_points = merged[["X", "Y", "Z"]].to_numpy(dtype=np.float32).reshape(-1, 1, 3)
    image_points = merged[["x", "y"]].to_numpy(dtype=np.float32).reshape(-1, 1, 2)

    # Solve PnP
    success, rvec, tvec = cv2.solvePnP(object_points, image_points, camera_matrix, dist_coeffs)
    if not success:
        print(f"PnP failed for {frame_file}")
        continue

    # Project and compute reprojection error
    projected_points, _ = cv2.projectPoints(object_points, rvec, tvec, camera_matrix, dist_coeffs)
    errors = np.linalg.norm(image_points - projected_points, axis=2)
    mean_error = np.mean(errors)

    results.append({
        "Frame": frame_file,
        "Num_points": len(merged),
        "Mean_Reprojection_Error": mean_error
    })

# === Save results ===
df = pd.DataFrame(results)
df.to_csv("reprojection_results.csv", index=False)
print(df)
